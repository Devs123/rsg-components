{"version":3,"file":"rsg-components.js","sources":["../../src/RSGBox.js","../../src/RSGButton.js","../../src/RSGLabel.js","../../src/RSGFormBasic.js","../../src/RSGTransition.js","../../src/RSGProgressBar.js","../../src/RSGCheckbox.js"],"sourcesContent":["// @flow\r\n// Imports come here.\r\nimport React from \"react\";\r\nimport { omit } from \"lodash\";\r\nimport { StyleSheet, css } from \"aphrodite-jss\";\r\n\r\n// Define the types of our props.\r\ntype Props = {\r\n  color?: string,\r\n  width?: string,\r\n  children: Array<React.createElement>,\r\n  style?: {},\r\n  opacity?: string,\r\n  height: string,\r\n};\r\n\r\n// Our little component.\r\nexport default function RSGBox(props: Props): React.createElement {\r\n  // Create our styles.\r\n  const styles: Object = StyleSheet.create({\r\n    mainDiv: {\r\n      height: props.height ? props.width : undefined,\r\n      color: props.color,\r\n      width: props.width ? props.width : undefined,\r\n      opacity: props.opacity,\r\n      background: \"rgb(230, 230, 230)\",\r\n      fontFamily: \"Verdana, Geneva, sans-serif\",\r\n      ...props.style,\r\n    },\r\n    mainSpan: {\r\n      marginLeft: \"15px\",\r\n      fontSize: \"13.5px\",\r\n      verticalAlign: \"middle\",\r\n    },\r\n  });\r\n\r\n\r\n  return (\r\n    <div className={css(styles.mainDiv)} {...omit(props, [\"style\"])}>\r\n      <span className={css(styles.mainSpan)}>\r\n        {props.children}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\n// The default props.\r\nRSGBox.defaultProps = {\r\n  color: \"rgb(10, 10, 10)\",\r\n  width: \"95%\",\r\n  opacity: \"1\",\r\n  style: {},\r\n};\r\n","// @flow\r\n// Imports go here.\r\nimport React from \"react\";\r\nimport { omit } from \"lodash\";\r\nimport { StyleSheet, css } from \"aphrodite-jss\";\r\n\r\n// Define the props and types our app needs.\r\ntype Props = {\r\n  background?: string,\r\n  color?: string,\r\n  fontSize?: string,\r\n  fontStyle?: string,\r\n  opacity?: string,\r\n  style?: Object,\r\n  children: Array<React.createElement>,\r\n  sizes: string, // If you face a bug saying sizes is compulsory with flow, pass anything as sizes.\r\n  // This was done to avoid errors later in the component.\r\n};\r\n\r\n// Create stylesheet of sizes.\r\nconst sizes: Object = {\r\n  s: () => ({ padding: \"1px 3px\", fontSize: \"12px\" }),\r\n  l: () => ({ padding: \"5px 7px\", fontSize: \"18px\" }),\r\n  xl: () => ({ padding: \"9px 11px\", fontSize: \"20px\" }),\r\n  xxl: () => ({ padding: \"12px 14px\", fontSize: \"25px\" }),\r\n  default: () => ({ padding: \"5px 4px\", fontSize: \"16px\" }),\r\n};\r\n\r\n// Finally.. our component.\r\nexport default function RSGButton(props: Props): React.createElement {\r\n  let sizeId: string;\r\n  if (props.sizes) sizeId = props.sizes;\r\n  else { sizeId = \"default\"; }\r\n  let padding = \"5px 4px\";\r\n  if (sizeId !== \"default\") padding = sizes[sizeId]().padding;\r\n\r\n  const styles: Object = StyleSheet.create({\r\n    mainButton: {\r\n      border: \"1px solid rgb(30, 100, 160)\",\r\n      borderRadius: \"3px\",\r\n      background: props.background,\r\n      color: props.color,\r\n      opacity: props.opacity,\r\n      padding,\r\n      ...props.style,\r\n      fontSize: props.fontSize ? props.fontSize : sizes[sizeId]().fontSize,\r\n      fontStyle: props.fontStyle,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <button className={css(styles.mainButton)} {...omit(props, [\"style\"])} >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\n// and sir default props.\r\nRSGButton.defaultProps = {\r\n  background: \"rgb(50, 120, 180)\",\r\n  color: \"rgb(220, 220, 220)\",\r\n  opacity: \"1\",\r\n  style: {},\r\n  fontSize: undefined,\r\n  fontStyle: undefined,\r\n  sizes: \"default\",\r\n};\r\n","// @flow\r\nimport React from \"react\";\r\nimport { omit } from \"lodash\";\r\nimport { StyleSheet, css } from \"aphrodite-jss\";\r\n\r\ntype Props = {\r\n  children: Array<React.createElement>,\r\n  opacity?: string, // eslint-disable-line react/no-unused-prop-types\r\n  style: {},\r\n  color?: string, // eslint-disable-line react/no-unused-prop-types\r\n  labelType?: string,\r\n};\r\n\r\nexport default function RSGLabel(props: Props) {\r\n  let background = false;\r\n  switch (props.labelType) {\r\n  case \"de\":\r\n    // This has already been configured in the style sheet, hence commented for optimization.\r\n    // Styles.mainSpan.background = \"rgb(195, 195, 195)\";\r\n    break;\r\n  case \"s\":\r\n    background = \"rgb(85, 180, 90)\";\r\n    break;\r\n  case \"w\":\r\n    background = \"rgb(255, 150, 25)\";\r\n    break;\r\n  case \"d\":\r\n    background = \"rgb(220, 75, 75)\";\r\n    break;\r\n  default:\r\n    // This has already been configured in the style sheet, hence commented for optimization.\r\n    // background = \"rgb(195, 195, 195)\";\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    mainSpan: {\r\n      ...props.style,\r\n      color: props.color,\r\n      fontFamily: \"monospace\",\r\n      fontSize: \".975em\",\r\n      padding: \".175em .3em\",\r\n      borderRadius: \".235em\",\r\n      background: background || \"rgb(195, 195, 195)\",\r\n      opacity: props.opacity,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <span className={css(styles.mainSpan)} {...omit(props, [\"style\", \"labelType\"])}>\r\n      {props.children}\r\n    </span>\r\n  );\r\n}\r\n\r\nRSGLabel.defaultProps = {\r\n  labelType: \"de\",\r\n  color: \"rgb(10, 10, 10)\",\r\n  style: {},\r\n  opacity: \"1\",\r\n};\r\n","// @flow\r\nimport React from \"react\";\r\nimport { StyleSheet, css } from \"aphrodite-jss\";\r\n\r\nexport default function RSGFormBasic(props: {}): React.createElement {\r\n  const styles: Object = StyleSheet.create({\r\n    inputStyle: {\r\n      border: \"1px solid rgb(128, 128, 128)\",\r\n      borderRadius: \"3.5px\",\r\n      background: \"rgb(250, 250, 250)\",\r\n      height: \"22.5px\",\r\n      paddingLeft: \"4.5px\",\r\n      paddingRight: \"3px\",\r\n    },\r\n    buttonStyle: {\r\n      background: \"rgb(50, 120, 180)\",\r\n      color: \"white\",\r\n      border: \"1px solid rgb(30, 100, 160)\",\r\n      borderRadius: \"3px\",\r\n      padding: \"5px 10px\",\r\n      fontSize: \"16px\",\r\n    },\r\n    seperator1: { height: \"5px\" },\r\n    seperator2: { height: \"7.5px\" },\r\n  });\r\n\r\n  return (\r\n    <form {...props}>\r\n      Username:\r\n      <input className={css(styles.inputStyle)} name=\"user\" type=\"text\" key={1} />\r\n      <div className={css(styles.seperator1)} key={2} />\r\n      Password:\r\n      <input className={css(styles.inputStyle)} name=\"password\" type=\"password\" key={3} />\r\n      <div className={css(styles.seperator2)} key={4} />\r\n      <button className={css(styles.buttonStyle)} key={5} type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n","// @flow\r\n/* eslint-disable no-console */\r\nexport default function RSGTransition(style: string = \"\", time: string = \"ease\", type: string) {\r\n  if (!time) {\r\n    console.error(\"RSGTransition: You must set time!\");\r\n    console.warn(\"syntax: RSGTransition(style, time, type)\");\r\n    console.log(\"For more info - Docs: \\nhttps://github.com/RSG-Group/rsg-components/wiki/RSGTransition\");\r\n    return undefined;\r\n  }\r\n  if (!type) {\r\n    console.info(\"If you don't want to set type, please don't set anything!\\nThe type by default is ease...\");\r\n    console.info(\"Example: RSGTransition(\\\"background\\\", \\\"5s\\\") - without type.\\nActually type will be set to ease by default.\\ntype === \\\"ease\\\"\");\r\n    console.log(\"For more info - Docs: \\nhttps://github.com/RSG-Group/rsg-components/wiki/RSGTransition\");\r\n    console.info(\"Don't worry! This isn't error. This is just tip.\");\r\n  }\r\n  const returnValue = { transition: (`${style} ${time} ${type}`) };\r\n  return returnValue;\r\n}\r\n","// @flow weak\r\n/* eslint-disable no-console */\r\nimport React from \"react\";\r\n\r\nlet txt = \"Initializing\";\r\nlet style = \"\";\r\n\r\ntype Props = {\r\n  anim?: boolean,\r\n  id: string,\r\n  checkered?: boolean | string,\r\n  children: Array<React.createElement>,\r\n  text: string,\r\n  progressCount: number,\r\n};\r\n\r\nexport default function RSGProgressBar(props: Props) {\r\n  if (!props.anim && !props.progressCount && typeof props.progressCount !== \"number\") {\r\n    return <div><b style={{ color: \"red\" }}>You MUST set progressCount prop as number!!!</b></div>;\r\n  }\r\n  if (!props.id) {\r\n    return <div><b style={{ color: \"red\" }}>You MUST set id of the RSGProgressBar component!</b></div>;\r\n  }\r\n  style = `.RSGProgressBar{  background: rgb(210, 215, 215);  box-shadow: inset 0 1.5px 3px rgb(150, 150, 150);  -webkit-box-shadow: inset 0 1.5px 3px rgb(150, 150, 150);  border-radius: 3px;  height: 20px;} #${props.id}SPAN{  background: rgb(51, 122, 183);  transition: width 1s;  width: 1%;  height: 20px;  border-radius: 5px;  text-align: center;  color: white; }`;\r\n\r\n  if (props.checkered === true) {\r\n    style = \".RSGProgressBar { background: rgb(210, 215, 215); box-shadow: inset 0 1.5px 3px rgb(150, 150, 150); -webkit-box-shadow: inset 0 1.5px 3px rgb(150, 150, 150); border-radius: 3px; height: 20px; } .PP { background: url(https://raw.githubusercontent.com/RSG-Group/rsg-components/master/images/Progress.png); transition: width 1s; height: 20px; border-radius: 5px;text-align: center; color: white; }\";\r\n  } else if (props.checkered === \"animated\") {\r\n    style = \".RSGProgressBar { background: rgb(210, 220, 220); box-shadow: inset 0 1.5px 3px rgb(150, 150, 150); -webkit-box-shadow: inset 0 1.5px 3px rgb(150, 150, 150); border-radius: 3px; height: 20px; } @keyframes animatedBackground { from { background-position: 0 0; } to { background-position: 100% 0; } } .PP { background-image: url(https://raw.githubusercontent.com/RSG-Group/rsg-components/master/images/Progress.png); background-position: 0px 0px; background-repeat: repeat-x; animation: animatedBackground 75s linear infinite; transition: width 1s; height: 20px; border-radius: 5px; text-align: center; color: white; }\";\r\n  }\r\n  const txt2 = props.text ? props.text : \"\";\r\n\r\n  if (props.children && typeof props.children !== \"string\") {\r\n    console.error(\"Please set only text for children\");\r\n  }\r\n\r\n  txt = props.children.length > 0 ?\r\n    `${props.progressCount}% ${txt2}`\r\n    : `${props.progressCount}% ${txt2}`;\r\n  const PPwidth = `${props.progressCount}%`;\r\n\r\n  if (props.anim === true && props.children) {\r\n    console.error(\"Now you are in \\\"anim\\\"-mode. Move your \\\"children\\\" to arguments in anim() function !!!\");\r\n  }\r\n\r\n  const DIVProps = { className: \"RSGProgressBar\", key: 5, ...props };\r\n  style += \" .PP{ overflow: hidden; }\";\r\n\r\n\r\n  return (\r\n    <div>\r\n      <style key={1}>{style}</style>\r\n      <div {...DIVProps}>\r\n        <div className=\"PP\" id={`${props.id}SPAN`} style={{ width: PPwidth }} key={3}>\r\n          {props.children}{txt}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nRSGProgressBar.defaultProps = {\r\n  anim: false,\r\n  checkered: false,\r\n};\r\n","// @flow\r\n// Imports here.\r\nimport React from \"react\";\r\nimport { omit } from \"lodash\";\r\n\r\n// Insert types for our components props here.\r\ntype Props = {\r\n  style: Object,\r\n  onChange: Function,\r\n  checked: boolean,\r\n};\r\n\r\n// Our beautiful component.\r\nexport default function RSGCheckbox(props: Props): React.createElement {\r\n  let classy = \"switch\";\r\n  if (this.props.RSGType === \"lg\") {\r\n    classy += \" switch-lg\";\r\n  }\r\n\r\n  // String of CSS which could be used to style RSGCheckbox.\r\n  const styles: string = \".switch input:checked+span{background-color:#5d9cec;border-color:#5d9cec;transition:all .5s}.switch.switch-lg span{width:50px;height:25px}.switch span{position:relative;display:inline-block;width:40px;height:20px;background-color:#fff;border:1px solid #ddd;border-radius:100px;transition:all .5s;box-shadow:1px 2px 3px rgba(0,0,0,.1) inset;vertical-align:middle}.switch *{cursor:pointer}.switch span:after{content:\\\"\\\";position:absolute;background-color:#fff;top:0;left:0;height:18px;width:18px;border:1px solid #ddd;border-radius:400px;box-shadow:1px 1px 3px rgba(0,0,0,.1);-webkit-transition:all .2s}.switch input{opacity:0;position:absolute;z-index:-1}.switch input:checked+span:after{left:50%;transition:all .2s}.switch.switch-lg span:after{height:23px;width:23px}\";\r\n\r\n  return (\r\n    <span>\r\n      <style>{styles}</style>\r\n      <label className={classy} htmlFor=\"checkbox\" style={props.style} {...omit(this.props, [\"className\", \"onChange\"])}>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={props.onChange}\r\n          checked={props.checked}\r\n          key={1}\r\n          {...omit(this.props, [\"type\", \"onChange\"])}\r\n        />\r\n        <span key={2} />\r\n      </label>\r\n    </span>\r\n  );\r\n}\r\n\r\n"],"names":["StyleSheet","create","mainDiv","height","width","color","opacity","background","fontFamily","style","mainSpan","marginLeft","fontSize","verticalAlign","css","omit","children","RSGBox","defaultProps","s","padding","l","xl","xxl","default","sizes","mainButton","border","borderRadius","fontStyle","RSGButton","labelType","RSGLabel","inputStyle","paddingLeft","paddingRight","buttonStyle","seperator1","seperator2","error","console","warn","log","info","transition","anim","progressCount","id","checkered","text","txt","length","className","key","RSGProgressBar","props","RSGType","onChange","checked"],"mappings":"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"}