import React from 'react';
import { omit } from 'lodash';
import { StyleSheet, css } from 'aphrodite-jss';

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

function RSGBox(a){var b=StyleSheet.create({mainDiv:_extends({height:a.height,color:a.color,width:a.width,opacity:a.opacity,background:"rgb(230, 230, 230)",fontFamily:"Verdana, Geneva, sans-serif"},a.style),mainSpan:{marginLeft:"15px",fontSize:"13.5px",verticalAlign:"middle"}});return React.createElement("div",_extends({className:css(b.mainDiv)},omit(a,["style"])),React.createElement("span",{className:css(b.mainSpan)},a.children))}RSGBox.defaultProps={color:"rgb(10, 10, 10)",width:"95%",opacity:"1",style:{}};

var sizes={s:function s(){return{padding:"1px 3px",fontSize:"12px"}},l:function l(){return{padding:"5px 7px",fontSize:"18px"}},xl:function xl(){return{padding:"9px 11px",fontSize:"20px"}},xxl:function xxl(){return{padding:"12px 14px",fontSize:"25px"}},default:function _default(){return{padding:"5px 4px",fontSize:"16px"}}};function RSGButton(a){var b=a.sizes?a.sizes:"default";var c="5px 4px";"default"!==b&&(c=sizes[b]().padding);var d=StyleSheet.create({mainButton:_extends({border:"1px solid rgb(30, 100, 160)",borderRadius:"3px",background:a.background,color:a.color,opacity:a.opacity,padding:c},a.style,{fontSize:a.fontSize?a.fontSize:sizes[b]().fontSize,fontStyle:a.fontStyle})});return React.createElement("button",_extends({className:css(d.mainButton)},omit(a,["style"])),a.children)}RSGButton.defaultProps={background:"rgb(50, 120, 180)",color:"rgb(220, 220, 220)",opacity:"1",style:{},fontSize:void 0,fontStyle:void 0,sizes:"default"};

function RSGLabel(a){var b=!1;switch(a.labelType){case"de":break;case"s":b="rgb(85, 180, 90)";break;case"w":b="rgb(255, 150, 25)";break;case"d":b="rgb(220, 75, 75)";break;default:}var c=StyleSheet.create(_extends({},a.style,{color:a.color,fontFamily:"monospace",fontSize:".975em",padding:".175em .3em",borderRadius:".235em",background:b||"rgb(195, 195, 195)",opacity:a.opacity}));return React.createElement("span",_extends({className:css(c.mainSpan)},omit(a,["style","labelType"])),a.children)}RSGLabel.defaultProps={labelType:"de",color:"rgb(10, 10, 10)",style:{},opacity:"1"};

function RSGFormBasic(a){var b=StyleSheet.create({inputStyle:{border:"1px solid rgb(128, 128, 128)",borderRadius:"3.5px",background:"rgb(250, 250, 250)",height:"22.5px",paddingLeft:"4.5px",paddingRight:"3px"},buttonStyle:{background:"rgb(50, 120, 180)",color:"white",border:"1px solid rgb(30, 100, 160)",borderRadius:"3px",padding:"5px 10px",fontSize:"16px"},seperator1:{height:"5px"},seperator2:{height:"7.5px"}});return React.createElement("form",a,"Username:",React.createElement("input",{className:css(b.inputStyle),name:"user",type:"text",key:1}),React.createElement("div",{className:css(b.seperator1),key:2}),"Password:",React.createElement("input",{className:css(b.inputStyle),name:"password",type:"password",key:3}),React.createElement("div",{className:css(b.seperator2),key:4}),React.createElement("button",{className:css(b.buttonStyle),key:5,type:"submit"}))}

function RSGTransition(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:"",b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:"ease",c=arguments[2];if(!b)return console.error("RSGTransition: You must set time!"),console.warn("syntax: RSGTransition(style, time, type)"),void console.log("For more info - Docs: \nhttps://github.com/RSG-Group/rsg-components/wiki/RSGTransition");c||(console.info("If you don't want to set type, please don't set anything!\nThe type by default is ease..."),console.info("Example: RSGTransition(\"background\", \"5s\") - without type.\nActually type will be set to ease by default.\ntype === \"ease\""),console.log("For more info - Docs: \nhttps://github.com/RSG-Group/rsg-components/wiki/RSGTransition"),console.info("Don't worry! This isn't error. This is just tip."));return{transition:a+" "+b+" "+c}}

var txt="Initializing"; var style="";function RSGProgressBar(a){if(!a.anim&&!a.progressCount&&"number"!=typeof a.progressCount)return React.createElement("div",null,React.createElement("b",{style:{color:"red"}},"You MUST set progressCount prop as number!!!"));if(!a.id)return React.createElement("div",null,React.createElement("b",{style:{color:"red"}},"You MUST set id of the RSGProgressBar component!"));style=".RSGProgressBar{  background: rgb(210, 215, 215);  box-shadow: inset 0 1.5px 3px rgb(150, 150, 150);  -webkit-box-shadow: inset 0 1.5px 3px rgb(150, 150, 150);  border-radius: 3px;  height: 20px;} #"+a.id+"SPAN{  background: rgb(51, 122, 183);  transition: width 1s;  width: 1%;  height: 20px;  border-radius: 5px;  text-align: center;  color: white; }",!0===a.checkered?style=".RSGProgressBar { background: rgb(210, 215, 215); box-shadow: inset 0 1.5px 3px rgb(150, 150, 150); -webkit-box-shadow: inset 0 1.5px 3px rgb(150, 150, 150); border-radius: 3px; height: 20px; } .PP { background: url(https://raw.githubusercontent.com/RSG-Group/rsg-components/master/images/Progress.png); transition: width 1s; height: 20px; border-radius: 5px;text-align: center; color: white; }":"animated"===a.checkered&&(style=".RSGProgressBar { background: rgb(210, 220, 220); box-shadow: inset 0 1.5px 3px rgb(150, 150, 150); -webkit-box-shadow: inset 0 1.5px 3px rgb(150, 150, 150); border-radius: 3px; height: 20px; } @keyframes animatedBackground { from { background-position: 0 0; } to { background-position: 100% 0; } } .PP { background-image: url(https://raw.githubusercontent.com/RSG-Group/rsg-components/master/images/Progress.png); background-position: 0px 0px; background-repeat: repeat-x; animation: animatedBackground 75s linear infinite; transition: width 1s; height: 20px; border-radius: 5px; text-align: center; color: white; }");var b=a.text?a.text:"";a.children&&"string"!=typeof a.children&&console.error("Please set only text for children"),txt=0<a.children.length?a.progressCount+"% "+b:a.progressCount+"% "+b;var c=a.progressCount+"%";!0===a.anim&&a.children&&console.error("Now you are in \"anim\"-mode. Move your \"children\" to arguments in anim() function !!!");var d=_extends({className:"RSGProgressBar",key:5},a);return style+=" .PP{ overflow: hidden; }",React.createElement("div",null,React.createElement("style",{key:1},style),React.createElement("div",d,React.createElement("div",{className:"PP",id:a.id+"SPAN",style:{width:c},key:3},a.children,txt)))}RSGProgressBar.defaultProps={anim:!1,checkered:!1};

function RSGCheckbox(a){var b="switch";"lg"===this.props.RSGType&&(b+=" switch-lg");return React.createElement("span",null,React.createElement("style",null,".switch input:checked+span{background-color:#5d9cec;border-color:#5d9cec;transition:all .5s}.switch.switch-lg span{width:50px;height:25px}.switch span{position:relative;display:inline-block;width:40px;height:20px;background-color:#fff;border:1px solid #ddd;border-radius:100px;transition:all .5s;box-shadow:1px 2px 3px rgba(0,0,0,.1) inset;vertical-align:middle}.switch *{cursor:pointer}.switch span:after{content:\"\";position:absolute;background-color:#fff;top:0;left:0;height:18px;width:18px;border:1px solid #ddd;border-radius:400px;box-shadow:1px 1px 3px rgba(0,0,0,.1);-webkit-transition:all .2s}.switch input{opacity:0;position:absolute;z-index:-1}.switch input:checked+span:after{left:50%;transition:all .2s}.switch.switch-lg span:after{height:23px;width:23px}"),React.createElement("label",_extends({className:b,htmlFor:"checkbox",style:a.style},omit(this.props,["className","onChange"])),React.createElement("input",_extends({type:"checkbox",onChange:a.onChange,checked:a.checked,key:1},omit(this.props,["type","onChange"]))),React.createElement("span",{key:2})))}

export { RSGBox, RSGButton, RSGLabel, RSGFormBasic, RSGTransition, RSGProgressBar, RSGCheckbox };
//# sourceMappingURL=rsg-components.js.map
